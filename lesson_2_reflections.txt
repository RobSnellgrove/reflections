What happens when you initialize a repository? Why do you need to do it?
- creates a .git file
- add the files you want tracking

How is the staging area different from the working directory and the repository? What value do you think it offers?
- the working directory is a normal folder
- the staging area is a git concept that stores things you are choosing to add to your respository
- the respository is files that are being tracked by git

How can you use the staging area to make sure you have one commit per logical change?
- add the file to the staging area after the change has been made

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- When trying out experimental new features
- testing the experiment won't damage what you're trying to do on the main branch. Can return to the point before the experiment, and still retain the experiment
- master branch is your production quality branch that always works
- could also have a development branch where work is actively happening
- experimental branches, things you expect will break

How do the diagrams help you visualize the branch structure?
- you can see how different commits follow on from which previous commits

What is the result of merging two branches together?
- the commits from the two branches are merged into the current commit, so we have the features from both. The old branch is deleted, but we can still find out the parents of each commit

Why do we represent it in the diagram the way we do?
- to make clear which commit has which parent

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
- automatic merging is fast, but requires manual attention in the case of conflicts
- merging manually only is a long and tedious process